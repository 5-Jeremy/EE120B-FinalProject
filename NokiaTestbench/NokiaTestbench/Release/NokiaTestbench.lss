
NokiaTestbench.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  000001b0  00000244  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000020  00800130  00800130  00000274  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000274  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002a4  2**2
                  CONTENTS, READONLY
  5 .debug_info   00000792  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000729  00000000  00000000  00000a76  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000169  00000000  00000000  0000119f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000296  00000000  00000000  00001308  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 eb       	ldi	r30, 0xB0	; 176
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 33       	cpi	r26, 0x30	; 48
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e3       	ldi	r26, 0x30	; 48
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 35       	cpi	r26, 0x50	; 80
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	62 d0       	rcall	.+196    	; 0x188 <main>
  c4:	73 c0       	rjmp	.+230    	; 0x1ac <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <delay_ms>:
  c8:	20 e0       	ldi	r18, 0x00	; 0
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	28 17       	cp	r18, r24
  ce:	39 07       	cpc	r19, r25
  d0:	4c f4       	brge	.+18     	; 0xe4 <delay_ms+0x1c>
  d2:	47 e0       	ldi	r20, 0x07	; 7
  d4:	53 e0       	ldi	r21, 0x03	; 3
  d6:	00 00       	nop
  d8:	41 50       	subi	r20, 0x01	; 1
  da:	51 09       	sbc	r21, r1
  dc:	e1 f7       	brne	.-8      	; 0xd6 <delay_ms+0xe>
  de:	2f 5f       	subi	r18, 0xFF	; 255
  e0:	3f 4f       	sbci	r19, 0xFF	; 255
  e2:	f4 cf       	rjmp	.-24     	; 0xcc <delay_ms+0x4>
  e4:	08 95       	ret

000000e6 <LCD_WriteCommand>:
  e6:	16 98       	cbi	0x02, 6	; 2
  e8:	88 b9       	out	0x08, r24	; 8
  ea:	17 9a       	sbi	0x02, 7	; 2
  ec:	00 00       	nop
  ee:	17 98       	cbi	0x02, 7	; 2
  f0:	82 e0       	ldi	r24, 0x02	; 2
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	e9 cf       	rjmp	.-46     	; 0xc8 <delay_ms>

000000f6 <LCD_ClearScreen>:
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	f6 cf       	rjmp	.-20     	; 0xe6 <LCD_WriteCommand>

000000fa <LCD_Cursor>:
  fa:	81 31       	cpi	r24, 0x11	; 17
  fc:	10 f4       	brcc	.+4      	; 0x102 <LCD_Cursor+0x8>
  fe:	81 58       	subi	r24, 0x81	; 129
 100:	01 c0       	rjmp	.+2      	; 0x104 <LCD_Cursor+0xa>
 102:	81 55       	subi	r24, 0x51	; 81
 104:	f0 cf       	rjmp	.-32     	; 0xe6 <LCD_WriteCommand>

00000106 <LCD_WriteData>:
 106:	16 9a       	sbi	0x02, 6	; 2
 108:	88 b9       	out	0x08, r24	; 8
 10a:	17 9a       	sbi	0x02, 7	; 2
 10c:	00 00       	nop
 10e:	17 98       	cbi	0x02, 7	; 2
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	d9 cf       	rjmp	.-78     	; 0xc8 <delay_ms>

00000116 <Custom_LCD_Init>:
 116:	ef 92       	push	r14
 118:	ff 92       	push	r15
 11a:	1f 93       	push	r17
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	84 e6       	ldi	r24, 0x64	; 100
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	d1 df       	rcall	.-94     	; 0xc8 <delay_ms>
 126:	88 e3       	ldi	r24, 0x38	; 56
 128:	de df       	rcall	.-68     	; 0xe6 <LCD_WriteCommand>
 12a:	86 e0       	ldi	r24, 0x06	; 6
 12c:	dc df       	rcall	.-72     	; 0xe6 <LCD_WriteCommand>
 12e:	8e e0       	ldi	r24, 0x0E	; 14
 130:	da df       	rcall	.-76     	; 0xe6 <LCD_WriteCommand>
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	d8 df       	rcall	.-80     	; 0xe6 <LCD_WriteCommand>
 136:	8a e0       	ldi	r24, 0x0A	; 10
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	c6 df       	rcall	.-116    	; 0xc8 <delay_ms>
 13c:	80 e0       	ldi	r24, 0x00	; 0
 13e:	e8 2e       	mov	r14, r24
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	f8 2e       	mov	r15, r24
 144:	10 e4       	ldi	r17, 0x40	; 64
 146:	c0 e0       	ldi	r28, 0x00	; 0
 148:	d0 e0       	ldi	r29, 0x00	; 0
 14a:	8c 2f       	mov	r24, r28
 14c:	81 0f       	add	r24, r17
 14e:	cb df       	rcall	.-106    	; 0xe6 <LCD_WriteCommand>
 150:	d7 01       	movw	r26, r14
 152:	ed 91       	ld	r30, X+
 154:	fc 91       	ld	r31, X
 156:	ec 0f       	add	r30, r28
 158:	fd 1f       	adc	r31, r29
 15a:	80 81       	ld	r24, Z
 15c:	d4 df       	rcall	.-88     	; 0x106 <LCD_WriteData>
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	b2 df       	rcall	.-156    	; 0xc8 <delay_ms>
 164:	21 96       	adiw	r28, 0x01	; 1
 166:	c8 30       	cpi	r28, 0x08	; 8
 168:	d1 05       	cpc	r29, r1
 16a:	79 f7       	brne	.-34     	; 0x14a <Custom_LCD_Init+0x34>
 16c:	18 5f       	subi	r17, 0xF8	; 248
 16e:	b2 e0       	ldi	r27, 0x02	; 2
 170:	eb 0e       	add	r14, r27
 172:	f1 1c       	adc	r15, r1
 174:	10 38       	cpi	r17, 0x80	; 128
 176:	39 f7       	brne	.-50     	; 0x146 <Custom_LCD_Init+0x30>
 178:	8a e0       	ldi	r24, 0x0A	; 10
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	df 91       	pop	r29
 17e:	cf 91       	pop	r28
 180:	1f 91       	pop	r17
 182:	ff 90       	pop	r15
 184:	ef 90       	pop	r14
 186:	a0 cf       	rjmp	.-192    	; 0xc8 <delay_ms>

00000188 <main>:
 188:	8f ef       	ldi	r24, 0xFF	; 255
 18a:	81 b9       	out	0x01, r24	; 1
 18c:	12 b8       	out	0x02, r1	; 2
 18e:	84 b9       	out	0x04, r24	; 4
 190:	15 b8       	out	0x05, r1	; 5
 192:	87 b9       	out	0x07, r24	; 7
 194:	18 b8       	out	0x08, r1	; 8
 196:	bf df       	rcall	.-130    	; 0x116 <Custom_LCD_Init>
 198:	ae df       	rcall	.-164    	; 0xf6 <LCD_ClearScreen>
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	ae df       	rcall	.-164    	; 0xfa <LCD_Cursor>
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	b2 df       	rcall	.-156    	; 0x106 <LCD_WriteData>
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	b0 df       	rcall	.-160    	; 0x106 <LCD_WriteData>
 1a6:	82 e0       	ldi	r24, 0x02	; 2
 1a8:	ae df       	rcall	.-164    	; 0x106 <LCD_WriteData>
 1aa:	ff cf       	rjmp	.-2      	; 0x1aa <main+0x22>

000001ac <_exit>:
 1ac:	f8 94       	cli

000001ae <__stop_program>:
 1ae:	ff cf       	rjmp	.-2      	; 0x1ae <__stop_program>
